<?php
/**
 * This file is part of the Achievo distribution.
 * Detailed copyright and licensing information can be found
 * in the doc/COPYRIGHT and doc/LICENSE files which should be
 * included in the distribution.
 *
 * @package achievo
 * @subpackage employee
 *
 * @copyright (c)2008 Ibuildings B.V.
 * @license http://www.achievo.org/licensing Achievo Open Source License
 *
 * @version $Revision: 5077 $
 * $Id: usercontracts.cron 5077 2008-06-30 20:50:48Z sandy $
 */


/**
 * Create an array with contracts per expire_date
 * when retrieving the contracts for a new expiration date, overwrite the older ones
 * This way only one mail is send to a specific user for his/her expiration date.
 * Also filter contracts that already are extended
 *
 * Full description of the function
 *
 * @param type name description
 * @return type description
 */
	function createExpiringContractsArrays($expire_dates)
	{
		// Initialize the contracts array
		$contracts = array();

		// Loop through all expire dates
		foreach ($expire_dates as $expire_date)
		{
			// Find all contracts that expire on the given date
			$contractstoexpire = getContractsByExpireDate($expire_date);

			// Loop through all contracts that expire on the given expire date
			foreach ($contractstoexpire as $contract)
			{
				//does this user have extendeded contracts?
				$extended_contracts = getExtendedContracts($contract, $expire_date);

				//if user has extended contract, the mail should not be send
				if($extended_contracts == array())
				{
					// Is the contract already listed in the array contracts
					$contracts[$contract["id"]] = $contract;
				}
			}
		}

		return $contracts;
	}

	/**
	 * Gets all contracts that expire on or before the specified date(depending on mode).
	 * The enddate of the contract should be after or on the date of today.
	 * Also the user account should not be deactivated (status != 'nonactive)'.
	 *
	 * Full description of the function
	 *
	 * @param date expirationdate
	 * @return array contracts
	 */
	function getContractsByExpireDate($dt)
	{
		$mode = atkConfig::get("employee", "employee_usercontracts_expiration_mode",1);

		$contractsnode = &getNode("employee.usercontracts");
		$personnode =  &getNode("person.person");

		$ids = $personnode->selectDb("status = 'nonactive'");

		$str = "";

		if( ($_i = count($ids)) > 0)
		{
			for($i=0; $i < $_i; $i++)
			{
				$str .= $ids[$i]["id"];

				if($i < ($_i-1))
					$str .= ",";
			}

			$str = " AND usercontract.userid NOT IN (".$str.")";
		}

		$selector = "";

		if($mode==2)
			$selector = "usercontract.enddate <= '$dt'";
		else
			$selector = "usercontract.enddate = '$dt'";

		$selector .= " AND usercontract.enddate >= NOW()";
		$selector .= $str;

		return $contractsnode->selectDb($selector);
	}

	/**
	 * check if users have a contract that is not expired
	 *
	 * @param array $contract Contract
	 * @param string $expire_date Date string in yyyy-mm-dd
	 * @return array
	 */
	function getExtendedContracts($contract, $expire_date)
	{
		$max_days = atkConfig::get("employee", "employee_usercontracts_expiration_max_expired_extended_days",0);

		$year = substr($expire_date,0,4);
		$month = substr($expire_date,5,2);
		$day = substr($expire_date,8,2);
		$seconds = mktime(12,0,0,$month, $day+$max_days, $year);
		$newdate = date("Y-m-d",$seconds);

		$contractsnode = &getNode("employee.usercontracts");
		$selector = "usercontract.userid = ".$contract['userid']['id'];
		$selector.= " AND usercontract.id != ".$contract['id'];
		$selector.= " AND usercontract.startdate <= '".$newdate."'";

		return $contractsnode->selectDb($selector);
	}

  /**
   * Send emails
   *
   * @param array $contracts Contracts
   */
	function sendEmails($contracts)
	{
		$warn_user = atkConfig::get("employee", "employee_usercontracts_expiration_send_warning_to_user",false);
		$dest_addr = atkConfig::get("employee", "employee_usercontracts_expiration_supervisors",array());


		if(!$warn_user) 														echo "Owners of usercontract will not recieve a warning mail.\n.";
//		if(!$warn_user) 	exit ("Nothing to do.\nExiting.\n");

		//send mail per contract
		foreach ($contracts as $contract)
		{
			if($contract != array())
			{
				$usr = getUserById($contract['userid']['id']);

				if ($usr[0]['supervisor']['id'] != '')
				{
					$supervisor = getUserById($usr[0]['supervisor']['id']);

					if ($supervisor[0]['email'] != '')
					{
					  $dest_addr[] = $supervisor[0]['email'];
					}
					else
					{
						echo ("The supervisor (".$supervisor[0]['firstname']." ".$supervisor[0]['lastname'].") of employee (".$usr[0]['firstname']." ".$usr[0]['lastname'].") has no emailaddress.\n");
					}
				}
				else
				{
					echo ("Employee (".$usr[0]['firstname']." ".$usr[0]['lastname'].") has no supervisor.\n");
				}

				if($dest_addr == array()) 									echo ("No supervisor emailaddresses provided in config file.\n");
				if(!$warn_user && ($dest_addr == array())) 	exit ("Nothing to do.\nExiting.\n");

				mailwarning($usr[0], $contract, $dest_addr, $warn_user);
			}
		}
	}

	/**
	 * Retrieve a user that belongs by his/her id
	 *
	 * @param int $id user id
	 * @return array
	 */
	function getUserById($id)
	{
		$usernode = &getNode("employee.employee");
		return $usernode->selectDb("person.id = ".$id);
	}

	/**
	 * Send an email to the supervisor(s) that a usercontract will expire on a specific date.
	 *
	 * @param array $user User
	 * @param array $usercontract User contract
	 * @param array $supervisors Supervisors
	 * @param boolean $warn_user Give user a warning
	 * @return void
	 */
	function mailwarning($user, $usercontract, $supervisors, $warn_user)
	{
		$startdate = $usercontract['startdate']['day']."-".$usercontract['startdate']['month']."-".$usercontract['startdate']['year'];
		$enddate = $usercontract['enddate']['day']."-".$usercontract['enddate']['month']."-".$usercontract['enddate']['year'];


		$body= "The contract of employee ".$user['firstname']." ".$user['lastname']." expires on ".$enddate."\n\n";
		$body.= "Employee information:\n\n";
		$body.= $user['firstname']." ".$user['lastname']."\n";
		$body.= "Email: ".$user['email']."\n\n\n";
		$body.= "Contract information:\n\n";
		$body.= "Contract period (dd-mm-yyyy): ".$startdate." to ".$enddate."\n";

		foreach($supervisors as $supervisor)
		{
			echo "sending mail to supervisor: ".$supervisor."\n";

			$to = $supervisor;
	  	$cc = "";
	  	usermail($to, atktext("usercontract_expiration_warning"), $body, $cc);
	  	echo "mail sent.\n";
		}

		if($warn_user && ($user['email'] != ""))
		{
			echo "sending mail to user: ".$user['email']."\n";
			$body= "Your contract will expire on ".$enddate."\n\n";

			$body.= "Employee information:\n\n";
			$body.= $user['firstname']." ".$user['lastname']."\n\n\n";
			$body.= "Contract information:\n\n";
			$body.= "Contract period: ".$startdate." to ".$enddate."\n";

			$to = $user['email'];
	  	$cc = "";

	  	usermail($to, atktext("usercontract_expiration_warning"), $body, $cc);
	  	echo "mail sent.\n";
		}
	}

	/**
	 * Sort array with expirevalues
	 *
	 * @param array $arr Aray
	 * @return array
	 */
	function sortExpireValues(&$arr)
	{
		usort($arr, "compareCallback");
	}

	/**
	 * Compares two arrays with the following format:
	 * $a is array('year'=>?, 'month'=>?, 'day'=>?)
	 * $b is array('year'=>?, 'month'=>?, 'day'=>?)
	 *
	 * @param array $a value 1
	 * @param array $b value 2
	 * @return boolean
	 */
	function compareCallback($a, $b)
	{
		$a_y = $a['year'];
		$a_m = $a['month'];
		$a_d = $a['day'];

		$b_y = $b['year'];
		$b_m = $b['month'];
		$b_d = $b['day'];

		if($a_y != $b_y)
			return ($a_y < $b_y) ? 1 : -1;
		else
		{
			if($a_m != $b_m)
				return ($a_m < $b_m) ? 1 : -1;
			else
			{
				if($a_d != $b_d)
					return ($a_d < $b_d) ? 1 : -1;
				else
					return 0;
			}
		}
	}

?>
<?php
  echo "Starting cronjob: usercontracts.cron\n\n";

	$expirevalues = atkConfig::get("employee", "employee_usercontracts_expiration_values",array());

	if($expirevalues == array())
		exit ("No expirevalues in config file or file does not exist.\nNothing to do.\nExiting.\n");

	sortExpireValues($expirevalues);

	$today = date("Y-m-d");
	$now_year = substr($today,0,4);
	$now_month = substr($today,5,2);
	$now_day = substr($today,8,2);

	//create expire dates
	$expire_dates = array();
	for($i=0; $i<count($expirevalues);$i++)
		$expire_dates[$i] = date("Y-m-d",mktime(12,0,0,$now_month+$expirevalues[$i]['month'], $now_day+$expirevalues[$i]['day'], $now_year+$expirevalues[$i]['year']));

	$contracts = createExpiringContractsArrays($expire_dates);

	if($contracts == array())
		exit ("No contracts will expire on the dates provided in the config file.\nNothing to do\nExiting.\n");

	sendEmails($contracts);
	echo "Finished cronjob: usercontracts.cron\n\n";
?>